Starting program: /home/adityag/projects/fast_stopwatch/stopwatch 

Breakpoint 1, 0x08049025 in _start ()
(gdb) c
Continuing.

Breakpoint 2, 0x0804902f in _start ()
(gdb) s
Single stepping until exit from function _start,
which has no line number information.
0x08049000 in sleep_for ()
(gdb) disassemble sleep_for 
Dump of assembler code for function sleep_for:
=> 0x08049000 <+0>:     dec    %ecx
   0x08049001 <+1>:     call   0x8049080
   0x08049006 <+6>:     cmp    $0x0,%ecx
   0x08049009 <+9>:     je     0x8049000 <sleep_for>
   0x0804900b <+11>:    jmp    0x804900d <done_waiting>
End of assembler dump.
(gdb) b *sleep_for+6
Breakpoint 3 at 0x8049006
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x08049080 in ?? ()
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/adityag/projects/fast_stopwatch/stopwatch 

Breakpoint 1, 0x08049025 in _start ()
(gdb) c
Continuing.

Breakpoint 2, 0x0804902f in _start ()
(gdb) s
Single stepping until exit from function _start,
which has no line number information.
0x08049000 in sleep_for ()
(gdb) disassemble sleep_for 
Dump of assembler code for function sleep_for:
=> 0x08049000 <+0>:     dec    %ecx
   0x08049001 <+1>:     call   0x8049080
   0x08049006 <+6>:     cmp    $0x0,%ecx
   0x08049009 <+9>:     je     0x8049000 <sleep_for>
   0x0804900b <+11>:    jmp    0x804900d <done_waiting>
End of assembler dump.
(gdb) b *sleep_for+1
Breakpoint 4 at 0x8049001
(gdb) c
Continuing.

Breakpoint 4, 0x08049001 in sleep_for ()
(gdb) s
Single stepping until exit from function sleep_for,
which has no line number information.
0x08049080 in ?? ()
(gdb) disassemble 0x8049080
No function contains specified address.
(gdb) disassemble 0x08049001
Dump of assembler code for function sleep_for:
   0x08049000 <+0>:     dec    %ecx
   0x08049001 <+1>:     call   0x8049080
   0x08049006 <+6>:     cmp    $0x0,%ecx
   0x08049009 <+9>:     je     0x8049000 <sleep_for>
   0x0804900b <+11>:    jmp    0x804900d <done_waiting>
End of assembler dump.
(gdb) disassemble 0x08049080
No function contains specified address.
(gdb) disassemble update_display 
No function contains specified address.
(gdb) q
A debugging session is active.

        Inferior 1 [process 102504] will be killed.

Quit anyway? (y or n) y
  fast_stopwatch git:(main)  vim tuvim tui_interface.asm 
  fast_stopwatch git:(main)  ./build_n_run.sh 
./build_n_run.sh: line 9: 102550 Segmentation fault      (core dumped) ./stopwatch
  fast_stopwatch git:(main)  gdb stopwatch        
GNU gdb (GDB) 10.2
Copyright (C) 2021 Free Software Foundation, Inc.                                                                                                              
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from stopwatch...
(No debugging symbols found in stopwatch)
(gdb) break update_display 
Breakpoint 1 at 0x8049080
(gdb) r
Starting program: /home/adityag/projects/fast_stopwatch/stopwatch 

Breakpoint 1, 0x08049080 in update_display ()
(gdb) disassemble update_display 
Dump of assembler code for function update_display:
=> 0x08049080 <+0>:     mov    %ecx,%edx
End of assembler dump.
(gdb) disassemble sleep_for 
Dump of assembler code for function sleep_for:
   0x08049000 <+0>:     dec    %ecx
   0x08049001 <+1>:     call   0x8049080 <update_display>
   0x08049006 <+6>:     cmp    $0x0,%ecx
   0x08049009 <+9>:     je     0x8049000 <sleep_for>
   0x0804900b <+11>:    jmp    0x804900d <done_waiting>
End of assembler dump.
(gdb) b *sleep_for+6
Breakpoint 2 at 0x8049006
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x08049082 in ?? ()
(gdb) q
A debugging session is active.

        Inferior 1 [process 102589] will be killed.

Quit anyway? (y or n) y

The Segmentation fault was due to missing a ret statement
